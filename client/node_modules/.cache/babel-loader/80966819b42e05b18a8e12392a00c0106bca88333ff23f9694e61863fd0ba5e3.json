{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neeraj singh kapkoti\\\\mern-todo-list\\\\client\\\\src\\\\components\\\\TodoItems.js\",\n  _s = $RefreshSig$();\nsrc / components / TodoItems.js;\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TodoItem({\n  name,\n  id,\n  completed,\n  setItems,\n  updateTodo\n}) {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const deleteTodo = async id => {\n    try {\n      const response = await fetch(`http://localhost:4000/to-do-app/delete/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to delete a task\");\n      }\n      setItems(items => items.filter(item => item._id !== id));\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  };\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  const handleUpdate = () => {\n    updateTodo(id, {\n      name: newName\n    });\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todo${completed ? \" check-complete\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newName,\n      onChange: e => setNewName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button edit\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button edit\",\n          onClick: handleEdit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button delete\",\n          onClick: () => deleteTodo(id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoItem, \"hAvaV9hVcIRBiyqAVB9CvQzT0Jc=\");\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["src","components","TodoItems","js","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoItem","name","id","completed","setItems","updateTodo","_s","isEditing","setIsEditing","newName","setNewName","deleteTodo","response","fetch","method","ok","Error","items","filter","item","_id","error","console","handleEdit","handleUpdate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Neeraj singh kapkoti/mern-todo-list/client/src/components/TodoItems.js"],"sourcesContent":["src/components/TodoItems.js\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nfunction TodoItem({ name, id, completed, setItems, updateTodo }) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [newName, setNewName] = useState(name);\r\n\r\n  const deleteTodo = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/to-do-app/delete/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to delete a task\");\r\n      }\r\n\r\n      setItems((items) => items.filter((item) => item._id !== id));\r\n    } catch (error) {\r\n      console.error(\"Error deleting task:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    updateTodo(id, { name: newName });\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className={`todo${completed ? \" check-complete\" : \"\"}`} key={id}>\r\n      <div className=\"checkbox\"></div>\r\n      {isEditing ? (\r\n        <input\r\n          type=\"text\"\r\n          value={newName}\r\n          onChange={(e) => setNewName(e.target.value)}\r\n        />\r\n      ) : (\r\n        <div className=\"text\">{name}</div>\r\n      )}\r\n      <div className=\"actions\">\r\n        {isEditing ? (\r\n          <button className=\"button edit\" onClick={handleUpdate}>Update</button>\r\n        ) : (\r\n          <>\r\n            <button className=\"button edit\" onClick={handleEdit}>Edit</button>\r\n            <button className=\"button delete\" onClick={() => deleteTodo(id)}>Delete</button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoItem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}